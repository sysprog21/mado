mainmenu "Mado System Configuration"

config CONFIGURED
    bool
    default y

# Dependency detection using Kconfiglib shell function
config HAVE_SDL2
    def_bool $(shell,pkg-config --exists sdl2 && echo y || echo n)

config HAVE_PIXMAN
    def_bool $(shell,pkg-config --exists pixman-1 && echo y || echo n)

config HAVE_LIBPNG
    def_bool $(shell,pkg-config --exists libpng && echo y || echo n)

config HAVE_LIBJPEG
    def_bool $(shell,pkg-config --exists libjpeg && echo y || echo n)

config HAVE_CAIRO
    def_bool $(shell,pkg-config --exists cairo && echo y || echo n)

choice
    prompt "Backend Selection"
    default BACKEND_SDL
    help
      Select the display backend for window system rendering.
      Only one backend can be active at a time.

config BACKEND_FBDEV
    bool "Linux framebuffer support"
    select CURSOR
    help
      Direct Linux framebuffer backend for embedded systems.
      Renders directly to /dev/fb0 without X11/Wayland.
      Requires Linux input subsystem for keyboard/mouse events.

config BACKEND_SDL
    bool "SDL video output support"
    depends on HAVE_SDL2
    help
      Cross-platform SDL2 backend for development and testing.

config BACKEND_VNC
    bool "VNC server output support"
    help
      Remote access backend using neatvnc library.
      Allows headless operation with VNC client connections.

config BACKEND_HEADLESS
    bool "Headless backend"
    help
      Shared memory backend for testing and automation.
      Renders to memory without display hardware or VNC.
      Designed for CI/CD pipelines and automated testing.
endchoice

choice
    prompt "Renderer Selection"
    default RENDERER_BUILTIN
    help
      Select the rendering engine for graphics operations.
      Only one renderer can be active at a time.

config RENDERER_BUILTIN
    bool "Built-in pixel manipulation"
    help
      Native C implementation of rendering primitives.
      Zero external dependencies for graphics operations.
      Suitable for embedded systems and minimal deployments.

config RENDERER_PIXMAN
    bool "Pixman based rendering"
    depends on HAVE_PIXMAN
    help
      Use Pixman library for optimized rendering operations.
      Provides SIMD-accelerated compositing and blending.
      Better performance for complex graphics workloads.

endchoice

menu "Features"

config LOGGING
    bool "Enable logging"
    default y
    help
      Enable debug and informational logging system.
      Provides runtime visibility into system operations.

config LOGGING_COLOR
    bool "Use colors for logging"
    default y
    depends on LOGGING
    help
      Colorize log output for better readability.
      Uses ANSI color codes in terminal output.
      Helps distinguish log levels visually.
      Disable if output is redirected to files.

config LOGGING_CALLBACK
    bool "Enable callback functions"
    default y
    depends on LOGGING
    help
      Allow custom callback functions for log handling.
      Enables application-specific log processing.

comment "Logging is disabled"
    depends on !LOGGING

config CURSOR
    bool "Manipulate cursor"
    default n
    depends on !BACKEND_VNC
    help
      Enable custom cursor rendering and manipulation.
      Allows application control over cursor appearance.

config DROP_SHADOW
    bool "Render drop shadow for active window"
    default y
    help
      Add drop shadow effect to active window.
      Provides visual depth and window focus indication.

config HORIZONTAL_OFFSET
    int "Horizontal offset"
    default 1
    range 1 10
    depends on DROP_SHADOW
    help
      Horizontal shadow offset in pixels.
      Larger values push shadow further right.

config VERTICAL_OFFSET
    int "Vertical offset"
    default 1
    range 1 10
    depends on DROP_SHADOW
    help
      Vertical shadow offset in pixels.
      Larger values push shadow further down.

config SHADOW_BLUR
    int "Shadow blur radius"
    default 10
    range 1 15
    depends on DROP_SHADOW
    help
      Shadow blur kernel size (radius).
      Larger values create softer, more diffuse shadows.
      Higher values increase rendering cost.

endmenu

menu "Image Loaders"

config LOADER_PNG
    bool "Enable PNG loader"
    depends on HAVE_LIBPNG
    default y
    help
      Enable PNG (Portable Network Graphics) image loading.
      Supports true color images with alpha transparency.

config LOADER_JPEG
    bool "Enable JPEG loader"
    depends on HAVE_LIBJPEG
    default y
    help
      Enable JPEG/JPG image loading support.
      Supports compressed photographic images.

config LOADER_GIF
    bool "Enable GIF loader"
    default y
    help
      Enable GIF (Graphics Interchange Format) loading.
      Supports animated GIF images and transparency.

config LOADER_TVG
    bool "Enable TinyVG (TVG) loader"
    default y
    help
      Enable TinyVG vector graphics format support.
      Compact binary format for scalable graphics.

endmenu

menu "Demo Applications"

config DEMO_APPLICATIONS
    bool "Build demo applications"
    default y
    help
      Build demonstration applications showcasing Mado features.
      Provides example code and testing targets.

config DEMO_MULTI
    bool "Build multi demo"
    default y
    depends on DEMO_APPLICATIONS
    help
      Comprehensive demo with multiple windows and widgets.
      Demonstrates window management and event handling.

config DEMO_HELLO
    bool "Build Hello world demo"
    default y
    depends on DEMO_APPLICATIONS
    help
      Simple "Hello World" demonstration program.
      Minimal example of Mado window system usage.

config DEMO_CLOCK
    bool "Build clock demo"
    default y
    depends on DEMO_APPLICATIONS
    help
      Analog clock demonstration with real-time updates.
      Showcases CORDIC trigonometry functions.
      Demonstrates timeout callbacks and redraw logic.

config DEMO_CALCULATOR
    bool "Build calculator demo"
    default y
    depends on DEMO_APPLICATIONS
    help
      Interactive calculator application.
      Demonstrates button widgets and event handling.
      Shows layout management and user input processing.

config DEMO_LINE
    bool "Build line demo"
    default y
    depends on DEMO_APPLICATIONS
    help
      Line drawing demonstration program.
      Shows primitive rendering capabilities.
      Tests line drawing algorithms and antialiasing.

config DEMO_SPLINE
    bool "Build spline demo"
    default y
    depends on DEMO_APPLICATIONS
    help
      Bezier spline curve demonstration.
      Shows advanced path rendering capabilities.
      Demonstrates curve smoothing algorithms.

config DEMO_ANIMATION
    bool "Build animation demo"
    default y
    depends on DEMO_APPLICATIONS
    help
      Animation demonstration with moving objects.
      Shows frame-based animation techniques.
      Demonstrates work queue and timeout systems.

config DEMO_IMAGE
    bool "Build scalable image demo"
    select LOADER_TVG
    default y
    depends on DEMO_APPLICATIONS
    help
      Scalable vector graphics demonstration.
      Shows TinyVG format rendering capabilities.
      Automatically enables TVG loader.
      Demonstrates resolution-independent graphics.

endmenu

menu "Tools"

config TOOLS
    bool "Build tools"
    default y
    help
      Build development and utility tools.
      Provides additional programs for testing and development.
      Individual tools can be selected below.

config TOOL_FONTEDIT
    bool "Build scalable font editor"
    default y
    depends on TOOLS && HAVE_SDL2 && HAVE_CAIRO
    help
      Interactive font editor for Mado font format.
      Allows creation and modification of scalable fonts.

config PERF_TEST
    bool "Build performance tester"
    default y
    depends on TOOLS
    help
      Performance benchmarking utility.
      Measures rendering and system performance metrics.
      Useful for validating optimizations and comparing backends.

config TOOL_HEADLESS_CTL
    bool "Build headless backend control tool"
    default y
    depends on TOOLS && BACKEND_HEADLESS
    help
      Control utility for headless backend operations.
      Enables programmatic interaction with headless instances.
      Communicates via shared memory protocol.

endmenu
